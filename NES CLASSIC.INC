'-- DETECT CONNECTED CONTROLLERS BEFORE START -------------------------------------------
'
' CONTROL TYPES
' 0 - DIRECTIONAL KEYS
' 1 - CLASSIC NES/SNES MINI
' 2 - WII CLASSIC CONTROLLER
' 3 - NUNCHUCK (NOT IMPLEMENTED YET)
' 4 - AWSD (DISABLED IN THIS GAME)

DIM CtrlType(4),CtrlChange(4),CtrlExist(4),BUF(10)

CtrlCount=1    'ONLY ONE CONTROLLER YET - THE KEYBOARD

CtrlExist(0)=1 'DIRECTIONAL KEYS

'DISABLE CONTROLLERS BUT KEYBOARD
For t=1 to 4
 CtrlExist(t)=0
next t

'CLASSIC NES/SNES MINI CONTROLLER (THIS MUST TO BE DETECTED FIRST)
CtrlExist(1)=0
Classic_Mini_Init(3)
if CtrlExist(1)=0 THEN Classic_Mini_Init(1)
IF CtrlExist(1) THEN Classic_Mini_Read(CtrlExist(1))

'WII CLASSIC CONTROLLER
CtrlExist(2)=0
IF CtrlExist(1)<>3 THEN
 FOR T=1 TO 10
  IF CtrlExist(2)<>0 then EXIT FOR
  ON ERROR SKIP 1: CONTROLLER CLASSIC OPEN 3
  if MM.ERRNO = 0 THEN  CtrlExist(2)=3
 NEXT T
ENDIF
IF CtrlExist(1)<>1 and CtrlExist(2)<>1 THEN 
 FOR T=1 TO 10
  IF CtrlExist(2)<>0 then EXIT FOR
  ON ERROR SKIP 1: CONTROLLER CLASSIC OPEN 1
  if MM.ERRNO = 0 THEN  CtrlExist(2)=1
 NEXT T
ENDIF

'NUNCHUK CONTROLLER
'CtrlExist(3)=0
'if CtrlExist(1)<>3 and CtrlExist(2)<>3 then
' ON ERROR SKIP 1: CONTROLLER NUNCHUK OPEN 3
' if MM.ERRNO = 0 THEN CtrlExist(3)=3
'EndIf
'if CtrlExist(1)<>1 and CtrlExist(2)<>1 then
' ON ERROR SKIP 1: CONTROLLER NUNCHUK OPEN 1
' if MM.ERRNO = 0 THEN  CtrlExist(3)=1
'ENDIF

'LIMIT THE NUMBER OF PLAYERS IF DOESN'T HAVE ENOUGH CONTROLLERS
MaxPl=1
for t=1 to 4
 'CHECK IF THE CONTROLLER WAS DETECTED
 if CtrlExist(t)<>0 then inc CtrlCount: Inc Maxpl: If MaxPl>4 then MaxPl=4
next t

'SET THE ACTIVE CONTROLLER TYPES
CtrlType(1)=0
for t=2 to CtrlCount
 if CtrlExist(t-1)<>0 and CtrlType(t)=0 then CtrlType(t)=t-1
next t


'ROUTINES FOR CONTROLLERS: SNES / NES / CLASSIC MINI ------------------------------------

SUB Classic_Mini_Read(CHAN)
  IF CHAN=3 THEN I2C3 READ &H52,0,8,BUF() ELSE I2C READ &H52,0,8,BUF()
  KCM$=RIGHT$("00000000"+BIN$(BUF(6)),8)+RIGHT$("00000000"+BIN$(BUF(7)),8)
  'PRINT @(0,30)
  'if PEEK(VAR KCM$, 1)=48 Then ?"RIGHT" 
  'if PEEK(VAR KCM$, 2)=48 Then ?"DOWN" 
  'if PEEK(VAR KCM$, 3)=48 Then ?"LB" 
  'if PEEK(VAR KCM$, 4)=48 Then ?"SELECT" 
  'if PEEK(VAR KCM$, 5)=48 Then ?"HOME" 
  'if PEEK(VAR KCM$, 6)=48 Then ?"START" 
  'if PEEK(VAR KCM$, 7)=48 Then ?"RB" 
  'if PEEK(VAR KCM$, 8)=48 Then ?"ok" 
  'if PEEK(VAR KCM$, 9)=48 Then ?"ZL" 
  'if PEEK(VAR KCM$,10)=48 Then ?"B" 
  'if PEEK(VAR KCM$,11)=48 Then ?"Y" 
  'if PEEK(VAR KCM$,12)=48 Then ?"A" 
  'if PEEK(VAR KCM$,13)=48 Then ?"X" 
  'if PEEK(VAR KCM$,14)=48 Then ?"ZR" 
  'if PEEK(VAR KCM$,15)=48 Then ?"LEFT" 
  'if PEEK(VAR KCM$,16)=48 Then ?"UP" 
  IF CHAN=3 THEN I2C3 WRITE &H52,0,1,&H00 ELSE I2C WRITE &H52,0,1,&H00
END SUB
MODE 1,8

' CLOSE THE CLASSIC MINI CONTROLLER I2C PROTOCOL
SUB Classic_Mini_Close(CHAN)
 ON ERROR SKIP 1
 IF CHAN=3 THEN I2C3 CLOSE ELSE I2C CLOSE
END SUB

' INIT THE CLASSIC MINI CONTROLLER I2C PROTOCOL
SUB Classic_Mini_Init(CHAN)
 Local n
  
  ON ERROR SKIP 1
  CONTROLLER CLASSIC OPEN CHAN
  ON ERROR SKIP 1
  CONTROLLER CLASSIC CLOSE CHAN

  IF CHAN=3 THEN I2C3 OPEN 100,100 ELSE I2C OPEN 100,100

  'INIT CONTROLLER
  FOR n = 1 TO 10
   IF CHAN=3 THEN I2C3 WRITE &H52,0,2,&HF0,&H55 ELSE I2C WRITE &H52,0,2,&HF0,&H55
   PAUSE 2
   IF MM.I2C = 0 THEN EXIT FOR
  NEXT n

  IF CHAN=3 THEN
   I2C3 WRITE &H52,0,2,&H00,&HFB: PAUSE(10)
   I2C3 WRITE &H52,0,2,&HFE,&H03 'REQUEST DATA TYPE 3'
   'CONTROLLER TYPE
   I2C3 WRITE &H52,0,1,&HFA: PAUSE 10
   I2C3 READ &H52,0,6,BUF()
  ELSE
   I2C WRITE &H52,0,2,&H00,&HFB: PAUSE(10)
   I2C WRITE &H52,0,2,&HFE,&H03 'REQUEST DATA TYPE 3'
   'CONTROLLER TYPE
   I2C WRITE &H52,0,1,&HFA: PAUSE 10
   I2C READ &H52,0,6,BUF()
  ENDIF

  'FOR T=0 TO 6
  ' PRINT BUF(T)
  'NEXT T

  IF BUF(0)=1 AND BUF(1)=0 AND BUF(2)=164 AND BUF(3)=32 AND BUF(4)=3 AND BUF(5)=1 AND BUF(6)=0 THEN
   CtrlExist(1)=CHAN
  ELSE
   Classic_Mini_Close(CHAN)
  ENDIF

END SUB

