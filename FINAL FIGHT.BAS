#INCLUDE "LOAD ASSETS.INC"
#INCLUDE "MANAGE CONTROLLERS.INC"
#INCLUDE "MANAGE ENEMIES.INC"
#INCLUDE "MANAGE FONTS.INC"
#INCLUDE "MANAGE GAME INTRO.INC"
#INCLUDE "MANAGE OBJECTS.INC"
#INCLUDE "MANAGE PLAYER ANIMATION.INC"
#INCLUDE "MANAGE SOUNDS.INC"
#INCLUDE "MANAGE ROUND EVENTS.INC"
#INCLUDE "MANAGE ROUND INTRO.INC"
#INCLUDE "MXN LOGO.INC"
#INCLUDE "SHAPES - ENEMIES.INC"
#INCLUDE "SHAPES - OBJECTS.INC"
#INCLUDE "SHAPES - PLAYERS.INC"

DEBUG=0
VSYNC=0
NOINTRO=0

'DETECT THE GENERATION OF THE COLOUR MAXIMITE 2
IF RIGHT$(MM.INFO$(DEVICE),2)="G2" THEN CMG1=0 ELSE CMG1=1

IF MM.INFO(VERSION)<5.07 THEN
 CLS
 PRINT "You need at least the firmware version 5.07 or better to run this program."
ENDIF

OPTION CONSOLE SCREEN

MODE 7,8

' KEYBOARD CONSTANTS
CONST K_ESC=27,K_SPC=32,K_N2=50,K_N4=52,K_N6=54,K_N8=56,K_P=80,K_U=128,K_D=129,K_L=130,K_R=131
CONST K_Z=90,K_X=88

' PLAYER'S VARIABLES --------------------------------------------------------------------
' COORDINATES (CURRENT / PREVIOUS) / HIT SHAPE COORDINATES / SHOW HIT OBJECT
DIM X(3),Y(3),XANT(3),YANT(3),XH(3),YH(3),SHOWHIT(3)
' SPEED / FLIP SIDE / ANIMATION NUMBER / PREVIOUS FLIP SIDE / PREVIOUS ANIMATION
DIM SPD(3),SIDE(3),AN(3),SIDEANT(3),ANANT(3)
' ANIMATION SPEED AND DELAY / WAIT(?) / WAIT HIT / SCORE
DIM AniSpd(3),AniDelay(3),Wait(3),PLWait(3),SCORE(3)
' PLAYER HURTED? / COMBO WHEN PLAYER HURTED / WHO HURTED THE PLAYER?
DIM Phurted(3),HCombo(3),WhoE(3)
' IT'S MOVING TO LEFT OR RIGHT? / UP OR DOWN? / CALL SFX IN A SINGLE GAME LOOP
DIM MVLR(3), MVUD(3), PLSFX(3)
' PUNCH / KICK / COMBO / GRAPPLE / ITEM ON THE FLOOR ABOVE THE PLAYER
DIM FreePunch(3),Punch(3),Kick(3),Combo(3),Grap(3),Item(3)
' JUMP / JUMP SPEED X,Y / SPECIAL ATTACK FLAG / TEMP CONTROL TYPE (TO STOP PLAYERS)
DIM Jump(3),JumpX(3),JumpY(3),Special(3),TCTYPE(3)
' ENERGY / ENEMY HIT AVATAR / HITTING SOMETHING? / GRAPPLED ENEMY NUMBER / LIFES
DIM Energy(3), Hit(3), Hitting(3), GrapE(3), PLIFE(3)
' TYPE OF PLAYER:
' 1-GUY / 2-CODY / 3-HAGGAR
DIM PlType(3)
' RESULT ON THE COLLISION PAGES
DIM COLLIDE(3)
' START PARAMETERS: SPECIAL / ATTACK / DEFENSE / JUMP / GRAPPLE / SPEED
DIM PS_SPC(3), PS_ATK(3), PS_DEF(3), PS_JMP(3), PS_GRP(3), PS_SPD(3)

' ENEMIES VARIABLES / ENTITIES / OBJECTS ------------------------------------------------
EMAX=24
'  4 TO 12 - ENEMIES (MAX  9 ENEMIES ON THE SCREEN)
' 13 TO 36 - OBJECTS (MAX 24 OBJECTS ON THE SCREEN)

' COORDINATES
DIM EX(EMAX)
' SIZE OF THE JUMP / JUMP SPEED / THROWED FLAG / WAIT HIT
DIM EY(EMAX),ESJMP(EMAX),ETR(EMAX),EWAIT(EMAX)
' SPEED / ENEMY FLIP SIDE / ENEMY TYPE / HIT COMBO COUNTER / WHO HITTED IT
DIM ESPD(EMAX),ESIDE(EMAX),EType(EMAX),ECOMBO(EMAX),EHIT(EMAX)
' SPEED X/Y / IS ENEMY WALKING BACK? (-1) / WALKING BACK HORIZONTALLY
DIM ESPDX(EMAX),ESPDY(EMAX),EBACK(EMAX),EBACKX(EMAX)
' ANIMATION NUMBER / ANIMATION SPEED / ANIMATION DELAY / ATTACK DISTANCE
DIM EAN(EMAX),EAniSpd(EMAX),EAniDelay(EMAX), EDIST(EMAX)
' CURRENT ENERGY / MAX ENERGY / MOVING FLAG / STATUS
DIM EEnergy(EMAX),EEnMax(EMAX),EMV(EMAX),STE(EMAX)
' START PARAMETERS: SPEED / POWER / DEFENSE / SCORE POINTS / ITENS INSIDE BROKEN THINGS
DIM ES_SPD(EMAX),ES_POW(EMAX),ES_DEF(EMAX),ESCORE(EMAX),EITEM(EMAX)


' STAGE MAXIMUM SIZE
DIM SMXA,SMXB,SMYA,SMYB

' HIT EVENTS ----------------------------------------------------------------------------
HMAX=9
' COORDINATES
DIM XHit(HMAX),YHit(HMAX)
' ACTION SHAPE / END SHAPE / ANIMATION SPEED
DIM AHit(HMAX),EnHit(HMAX),SPHit(HMAX)

' STAGE EVENTS ------------------------------------------------------
DIM Event(20)

' INDEX OF ALL ENTITIES AND "Z-AXIS" --------------------------------
DIM Index(EMAX) AS INTEGER
' REAL Y AXIS TO USE IN COLLISIONS / PSEUDO Z-BUFFERING
DIM RealY(EMAX), ZBUF(EMAX)

HIGHSCORE=20000
PLHIGH$="NIN"

PLType(1)=1
PLType(2)=2

'OPENNING MUST BE IN 16-BIT DEPTH
IF NOINTRO=0 THEN
 MODE 7,16
 PAUSE 2000:MXN_Logo
 LoadIntro
 Intro

 'FORCE 8-BIT ON THE CMM2 G1 - TOO MANY PAGES IN THE 16-BIT MODE
 IF CMG1 THEN MODE 7,8
 LoadAssets
 PAUSE 300

 PAGE WRITE 0
 PrintS(220,2,0,"CMM2 EDITION")

 PrintS(52,220,1,"#CAPCOM CO`,LTD` 1989 1990")
 PrintS(52,230,0," REPROGRAMMED BY MXN 2021")

 DO
  IF TIMER MOD 800<=400 THEN
   PrintS(76,190,0,"PRESS SPACE TO START")
  ELSE
   BOX 76,190,200,8,,0,0
  ENDIF

  IF KEYDOWN(1)=32 THEN EXIT DO
 LOOP

 PLAY STOP
 PLAY MODFILE ".\SFX\SFX - MENU.MOD",22050
 PLAY_SAMPLE 4,4,,100
 PAUSE 600: FadeOut
 CLS: PAUSE 100

ELSE

 IF CMG1 THEN MODE 7,8

ENDIF

#INCLUDE "MANAGE PLAYER SELECTION.INC"

NOSEL:

'GAME IS RECOMMENDED IN 8-BIT DEPTH FOR SPEED STABILITY
'FORCE 8-BIT ON THE CMM2 G1
IF NOINTRO AND CMG1=0 THEN MODE 7,16
'MODE 7,8
LoadAssets

COLOR RGB(255,255,255),RGB(0,0,0)

PAGE WRITE 0
PrintS(117,105,0,"LOADING```")

FRAMEBUFFER CREATE 1600,1200
FRAMEBUFFER WRITE

IF CMG1 THEN
 LOAD BMP ".\IMAGES\MAIN FRAMEBUFFER.BMP"
ELSE
 'LOAD PNG IMAGE ON CMM2 G2 - FASTER
 LOAD PNG ".\IMAGES\MAIN FRAMEBUFFER.PNG"
ENDIF

'LOAD GENERAL ASSETS
LoadAssets

Round=1: Section=1

'ALWAYS NEED TO BE LOADED THE FIRST SECTION TO TEST ANY OTHER SECTION
IF NOINTRO THEN
 LoadRound: Section=1
ENDIF

LoadRound

'SECOND PLAYER OUT OF THE SCREEN IF ISN'T ENABLED
X(2)=-1000: RealY(2)=-1000: Energy(2)=-100

IF NOINTRO THEN
 OSDX=20
 MAXPL=1
 PLType(1)=1
 PLType(2)=3
ENDIF

'START VARIABLES FOR EACH PLAYER
FOR PL=1 TO MAXPL
 SELECT CASE PlType(PL)
  CASE 1: 'GUY
   PS_SPC(PL)=1: PS_ATK(PL)=1: PS_DEF(PL)=1: PS_JMP(PL)=3: PS_GRP(PL)=2: PS_SPD(PL)=5
  CASE 2: 'CODY
   PS_SPC(PL)=2: PS_ATK(PL)=2: PS_DEF(PL)=2: PS_JMP(PL)=2: PS_GRP(PL)=2: PS_SPD(PL)=4
  CASE 3: 'HAGGAR
   PS_SPC(PL)=3: PS_ATK(PL)=3: PS_DEF(PL)=3: PS_JMP(PL)=1: PS_GRP(PL)=3: PS_SPD(PL)=3
 END SELECT

 LoadPlayer(PlType(PL),PL)

 'PLAYER GAME LOGIC VARIABLES
 SPD(PL)=PS_SPD(PL)
 Grap(PL)=0: GrapE(PL)=0
 SIDE(PL)=4:Punch(PL)=0:Jump(PL)=0:JumpX(PL)=0
 Special(PL)=0: PLIFE(PL)=2
 AniSpd(PL)=4:AniDelay(PL)=0:Wait(PL)=0:PHurted(PL)=0
 Energy(PL)=115: SCORE(PL)=0
 X(PL)=80-PL*20:RealY(PL)=155+PL*40:Y(PL)=0
 TCTYPE(PL)=CtrlType(PL)
 CtrlType(PL)=-1
NEXT PL

PAGE WRITE 1
PLAY STOP
PLAY MODFILE ".\SFX\SFX - INGAME.MOD",22050

GameLogic=1

ClearEvents

IF NOINTRO=1 THEN
 PLAY_WAV "The Slums"
ELSE
 SELECT CASE Round
  CASE 1:
   LoadRoundMap(Round,0) 'LOAD INTRO MAP
   'ENEMIES
   InsertEnemy(285,205,6)
   InsertEnemy(250,235,5)
   InsertEnemy(270,190,80): EAN(6)=101
   'DRUMCAN
   FOR T=0 TO 1: FOR I=0 TO 2
    InsertObject(135+T*60+(T=1 AND I=1)*40-I*15,190+I*25,2)
   NEXT T,I
   OSDX=2210
 END SELECT
ENDIF

'CLEAR BUFFER FOR THE CLASSIC MINI CONTROLLER
FOR T=1 TO 2
 IF CtrlType(T)=1 THEN Classic_Mini_Read(CtrlExist(1))
NEXT T

TIMER=0
STIME=30: GTIME=0: GOGO=0: ANTSCROLL=Scroll

StageScrollEvent(0,0)


DO WHILE GameLogic=1

 PAGE WRITE 1 ' SET MAIN VIDEO PAGE - FRAMEBUFFER

 'GENERIC SWITCHER
 SB=(SB=0)
 IF SB=1 THEN SW=(SW=0)

 'RESET WHICH SIDE THE SCREEN IS SCROLLING
 ScrSide=0
 PLSCR=0


' ** PLAYER'S LOGIC **

FOR PL=1 TO MAXPL ' --------------------------------------------------------------------------

 IF Energy(PL)<=0 AND PLife(PL)<0 THEN EXIT FOR

 IF PLWAIT(PL)>0 THEN INC PLWAIT(PL),-1

 IF PLWAIT(PL)=0 THEN

 ' PLAYER'S LOGIC
 IF SIDEANT(PL)<>SIDE(PL) THEN Combo(PL)=0 'RESET COMBO ATTACK IF PLAYER CHANGE POSITION
 INC HCombo(PL),-1: if HCombo(PL)<0 then HCombo(PL)=0 'ENEMY COMBO

 ' PREVIOUS X,Y AND SIDE OF THE PLAYER
 XANT(PL)=X(PL):YANT(PL)=RealY(PL): SIDEANT(PL)=SIDE(PL)
 IF OSDX=0 THEN MV=0

 ' READ BUTTONS -------------------------------------------------------------------------

 IF OSDX=0 THEN KSHIFT=0: KCTRL=0: KALT=0

 SELECT CASE CtrlType(PL)

  CASE 0: 'KEYBOARD SHIFT + CTRL + ALT --------------------------------------------------
   'CONTROL - READ MODIFIER KEYS
   MDKEY$=RIGHT$("00000000"+BIN$(KEYDOWN(7)),8)
   'RESPOND ONLY WHEN NOT HURTED
   IF PHurted(PL)=0 OR PHurted(PL)=8 OR PHurted(PL)=9 THEN
    IF PEEK(VAR MDKEY$,1)=49 OR PEEK(VAR MDKEY$,5)=49 THEN KSHIFT=1
    IF PEEK(VAR MDKEY$,3)=49 OR PEEK(VAR MDKEY$,7)=49 THEN KCTRL=1
    IF PEEK(VAR MDKEY$,4)=49 OR PEEK(VAR MDKEY$,8)=49 THEN KALT=1
   ENDIF

  CASE 1: 'CLASSIC NES/SNES MINI --------------------------------------------------------
   Classic_Mini_Read(CtrlExist(1))
   'IF PEEK(VAR KCM$, 06)=48 THEN 'START
   IF PHurted(PL)=0 OR PHurted(PL)=8 OR PHurted(PL)=9 THEN
    IF PEEK(VAR KCM$, 10)=48 THEN KSHIFT=1 'B
    IF PEEK(VAR KCM$, 12)=48 THEN KCTRL=1  'A
    IF PEEK(VAR KCM$,  4)=48 THEN KALT=1   'SELECT 
   ENDIF

  CASE 2: 'WII CLASSIC CONTROLLER -------------------------------------------------------
   KC$=RIGHT$("00000000000000"+BIN$(CLASSIC(B,CtrlExists(2))),14)
   LX=CLASSIC(LX,CtrlExist(2))
   LY=CLASSIC(LY,CtrlExist(2))
   'IF PEEK(VAR KC$,13)=49 THEN 'START
   IF PHurted(PL)=0 OR PHurted(PL)=8 OR PHurted(PL)=9 THEN
    IF PEEK(VAR KC$, 1)=49 THEN KSHIFT=1 'B
    IF PEEK(VAR KC$, 3)=49 THEN KCTRL=1  'A
   ENDIF

 END SELECT

 ' END READING BUTTONS ------------------------------------------------------------------


 'IF THE PLAYER ISN'T GRAPPLING AN ENEMY, PUNCHING, JUMPING, KICKING OR IS HURTED THEN HE CAN MOVE
 'HAGGAR CAN GRAPPLE AND MOVE AT THE SAME TIME
 if (Punch(PL)<=2 or Grap(PL)>0) and Jump(PL)=0 and Kick(PL)=0 and PHurted(PL)=0 then
  MVLR(PL)=0
  MVUD(PL)=0

  'CONTROL - MOVE -----------------------------------------------------------------------

  'MOVE WHEN ENEMY GRAPPLED ONLY IF IT'S HAGGAR ELSE
  'DON'T MOVE IF GRAPPLING, PUNCHING OR KICKING
  SELECT CASE CtrlType(PL)

   CASE 0: 'KEYBOARD DIRECTIONAL KEYS ---------------------------------------------------
    IF ((PLType(PL)=3 AND Grap(PL)<21) OR Grap(PL)=0 OR Punch(PL)=0 OR Kick(PL)=0) THEN 
     FOR T=1 TO 6
      KB=ASC(UCASE$(CHR$(KEYDOWN(T))))
      SELECT CASE KB
       CASE K_U: INC RealY(PL),-SPD(PL): MV=1: MVUD(PL)=-1
       CASE K_D: INC RealY(PL), SPD(PL): MV=1: MVUD(PL)= 1
       CASE K_L: INC X(PL),-SPD(PL): MV=1: MVLR(PL)=-1: IF Grap(PL)=0 THEN SIDE(PL)=5
       CASE K_R: INC X(PL), SPD(PL): MV=1: MVLR(PL)= 1: IF Grap(PL)=0 THEN SIDE(PL)=4
      END SELECT
     NEXT T
    ELSE 'THE PLAYER CAN'T MOVE BUT READ ONLY CONTROL THE SIDE
     FOR T=1 TO 6
      KB=ASC(UCASE$(CHR$(KEYDOWN(T))))
      SELECT CASE KB
       CASE K_U: MVUD(PL)=-1
       CASE K_D: MVUD(PL)= 1
       CASE K_L: MVLR(PL)=-1
       CASE K_R: MVLR(PL)= 1
      END SELECT
     NEXT T
    ENDIF

   CASE 1: 'CLASSIC NES/SNES MINI -------------------------------------------------------
    IF ((PLType(PL)=3 AND Grap(PL)<21) OR Grap(PL)=0 OR Punch(PL)=0 OR Kick(PL)=0) THEN 
     IF PEEK(VAR KCM$,16)=48 THEN INC RealY(PL),-SPD(PL): MV=1: MVUD(PL)=-1
     IF PEEK(VAR KCM$, 2)=48 THEN INC RealY(PL), SPD(PL): MV=1: MVUD(PL)= 1
     IF PEEK(VAR KCM$,15)=48 THEN INC X(PL),-SPD(PL): MV=1: MVLR(PL)=-1: IF Grap(PL)=0 THEN SIDE(PL)=5
     IF PEEK(VAR KCM$, 1)=48 THEN INC X(PL), SPD(PL): MV=1: MVLR(PL)= 1: IF Grap(PL)=0 THEN SIDE(PL)=4
    ELSE 'THE PLAYER CAN'T MOVE BUT READ ONLY CONTROL THE SIDE
     IF PEEK(VAR KCM$,16)=48 THEN MVUD(PL)=-1
     IF PEEK(VAR KCM$, 2)=48 THEN MVUD(PL)= 1
     IF PEEK(VAR KCM$,15)=48 THEN MVLR(PL)=-1
     IF PEEK(VAR KCM$, 1)=48 THEN MVLR(PL)= 1
    ENDIF

   CASE 2: 'WII CLASSIC CONTROLLER ------------------------------------------------------
    IF ((PLType(PL)=3 AND Grap(PL)<21) OR Grap(PL)=0 OR Punch(PL)=0 OR Kick(PL)=0) THEN 
     IF PEEK(VAR KC$, 7)=49 OR LY>195 THEN INC RealY(PL),-SPD(PL): MV=1: MVUD(PL)=-1
     IF PEEK(VAR KC$, 9)=49 OR LY< 60 THEN INC RealY(PL), SPD(PL): MV=1: MVUD(PL)= 1
     IF PEEK(VAR KC$, 6)=49 OR LX< 60 THEN INC X(PL),-SPD(PL): MV=1: MVLR(PL)=-1: IF Grap(PL)=0 THEN SIDE(PL)=5
     IF PEEK(VAR KC$, 8)=49 OR LX>195 THEN INC X(PL), SPD(PL): MV=1: MVLR(PL)= 1: IF Grap(PL)=0 THEN SIDE(PL)=4
    ELSE 'THE PLAYER CAN'T MOVE BUT READ ONLY CONTROL THE SIDE
     IF PEEK(VAR KC$, 7)=49 OR LY>195 THEN MVUD(PL)=-1
     IF PEEK(VAR KC$, 9)=49 OR LY< 60 THEN MVUD(PL)= 1
     IF PEEK(VAR KC$, 6)=49 OR LX< 60 THEN MVLR(PL)=-1
     IF PEEK(VAR KC$, 8)=49 OR LX>195 THEN MVLR(PL)= 1
    ENDIF

  END SELECT 'END OF CONTROLLER MOVEMENT ------------------------------------------------


  'CONTROL - SPECIAL BUTTON -----------------------------------------
  IF ((KCTRL AND KSHIFT) OR KALT) THEN
   IF Energy(PL)>0 AND Jump(PL)=0 AND (Punch(PL)=0 OR Grap(PL)>0) AND Special(PL)=0 THEN
    AniDelay(PL)=20: Kick(PL)=10: Special(PL)=1
    Jump(PL)=51: JumpX(PL)=0
    IF Energy(PL)>0 THEN INC Energy(PL),-5
    IF Energy(PL)<0 THEN Energy(PL)=0
    KCTRL=0: KSHIFT=0: KALT=0
   ENDIF
  ENDIF

  'CONTROL - PUNCH BUTTON -------------------------------------------
  INC Hitting(PL),-1 'RESET HITTING STATUS
  IF Hitting(PL)<0 THEN Hitting(PL)=0: IF Grap(PL)=0 THEN Combo(PL)=0
  
  IF KSHIFT THEN

   ' GET ITEM
   IF Item(PL)>0 AND AN(PL)<=12 AND Kick(PL)=0 AND Punch(PL)=0 AND Jump(PL)=0 AND FreePunch(PL)=1 AND Grap(PL)=0 THEN
    STE(Item(PL))=99: EHIT(Item(PL))=PL: Punch(PL)=201: FreePunch(PL)=0
   ENDIF

   ' NORMAL PUNCH OR COMBO
   IF (Punch(PL)<3+(PlType(PL)=3)*3 OR Combo(PL)>=3) AND FreePunch(PL)=1 AND Grap(PL)=0 THEN
    T=Punch(PL)
    Punch(PL)=4+(PlType(PL)=3)*2: AniDelay(PL)=0: AniSpd(PL)=1
    SELECT CASE PLType(PL)

     CASE 1: 'GUY
      'THIRD PUNCH IF COMBO RATE 3 AND IN THE FIRST PUNCHING SEQUENCE
      IF Hitting(PL)>0 AND Combo(PL)=3 AND T<=4 THEN Punch(PL)=14
      'LAST KICK IF COMBO RATE >=4, NOT PUSHING UP OR DOWN AND SEQUENCE ABOVE THIRD PUNCH
      IF Combo(PL)>=4 AND MVUD(PL)=0 AND T>10 THEN Punch(PL)=10

     CASE 2: 'CODY
      'THIRD PUNCH IF COMBO RATE 3 AND IN THE FIRST PUNCHING SEQUENCE
      IF Hitting(PL)>0 AND Combo(PL)=3 AND T<=4 THEN Punch(PL)=13
      'LAST KICK IF COMBO RATE >=4, NOT PUSHING UP OR DOWN AND SEQUENCE ABOVE THIRD PUNCH
      IF Combo(PL)>=4 AND MVUD(PL)=0 AND T>10 THEN Punch(PL)=10

     CASE 3: 'HAGGAR
      'THIRD PUNCH IF COMBO RATE 2 AND IN THE FIRST PUNCHING SEQUENCE
      IF Hitting(PL)>0 AND Combo(PL)=2 AND T<=6 THEN Punch(PL)=6
      'LAST KICK IF COMBO RATE >=4, NOT PUSHING UP OR DOWN AND SEQUENCE ABOVE THIRD PUNCH
      IF Combo(PL)>=3 AND MVUD(PL)=0 AND T>10 THEN Punch(PL)=11

    END SELECT
    'PLAY ONLY IF THE SOUND CHANNEL IS OPEN (LIKE THE ARCADE)
    IF Punch(PL)=4+(PlType(PL)=3)*2 THEN PLAY_SAMPLE 28,PL,,-1 
   ENDIF

   ' CODY/GUY THROW ENEMY OR HAGGAR SUPLEX
   IF MVUD(PL)=1 AND FreePunch(PL)=1 AND Grap(PL)=20 THEN
    INC Hitting(PL),-1 'RESET HITTING STATUS
    IF Hitting(PL)<0 THEN Hitting(PL)=0
    Grap(PL)=22: AN(PL)=22
    AniDelay(PL)=0: AniSpd(PL)=1
    T=GrapE(PL)
    ESIDE(T)=5-(MVLR(PL)=1):Side(PL)=4+(MVLR(PL)=1)
    'ENEMY THROWED SIDE
    ESPDX(T)=(Side(PL)=5)*8-(Side(PL)=4)*8

    'FIX ENEMY POSITION WHEN THROW / SUPLEX
    IF PlType(PL)=3 THEN Punch(PL)=131: STE(T)=60: InsertWait(PL,T,4): RealY(T)=RealY(PL)-4 
   ENDIF

   ' CODY/GUY KICK WHEN GRAPPLE AN ENEMY / HAGGAR HEAD BANG
   IF MVUD(PL)=0 AND Punch(PL)>30 AND FreePunch(PL)=1 AND Grap(PL)>0 AND Hitting(PL)=0 THEN
    'RESET HITTING STATUS
    IF Grap(PL)=20 THEN Grap(PL)=21: Punch(PL)=110
    AniDelay(PL)=0: AniSpd(PL)=1
   ENDIF

  ENDIF 'END PUNCH CONTROL ------------------------------------------


  'CONTROL - JUMP BUTTON --------------------------------------------
  IF KCTRL THEN

   IF Jump(PL)=0 THEN
    AniDelay(PL)=20: Kick(PL)=0
    IF MVLR(PL)<>0 THEN
     Jump(PL)=16-5*(PLType(PL)=3) 
     JumpX(PL)=MVLR(PL)*SPD(PL)
    ELSE
     Jump(PL)=31: JumpX(PL)=0
    ENDIF
   ENDIF

  ENDIF

 ELSE 'NOT PUNCHING, JUMPING OR KICKING -------------------------------------------------

  'GRAVITY
  IF (Jump(PL)>1 AND Jump(PL)<99) or (PHurted(PL)>2 and PHurted(PL)<=15) THEN
   INC X(PL),JumpX(PL): INC JumpY(PL),1
  ENDIF
  INC Y(PL),JumpY(PL)
 
  'GET UP FASTER IF HURTED WHEN PRESSING BUTTONS
  IF (PHurted(PL)=8 OR Phurted(PL)=9) THEN
   IF MVUD(PL)=0 AND (KSHIFT OR KCTRL OR KALT) THEN MVUD(PL)=1: INC AniDelay(PL),3
   IF NOT(KSHIFT OR KCTRL OR KALT) THEN MVUD(PL)=0 
  ENDIF

  'CUT PLAYER MOVES WHEN HURTED
  IF PHurted(PL)>0 THEN Combo(PL)=0: Punch(PL)=0: Grap(PL)=0: GrapE(PL)=0
  
 ENDIF 
 'END OF CONTROL: ISN'T GRAPPLE AN ENEMY, PUNCH, JUMP, KICK OR IS HURTED ----------------


 ' FIX TO NOT DO TURBO PUNCH
 FreePunch(PL)=1
 IF KSHIFT THEN FreePunch(PL)=0

 IF KEYDOWN(1)=K_ESC THEN ExitGame

 'VERTICAL LIMIT
 IF RealY(PL)<SMYA THEN RealY(PL)=SMYA
 IF RealY(PL)>SMYB THEN RealY(PL)=SMYB
 IF Y(PL)>0 THEN
  Y(PL)=0
  'RESET PILE DRIVER WHEN TOUCH THE GROUND AND HURT THE ENEMY
  IF AN(PL)=32 AND PlType(PL)=3 THEN
   T=GrapE(PL): SHAKE=10
   INC EEnergy(T),-EEnMAX(T)\2-100+ES_DEF(T): Jump(PL)=36: AniDelay(PL)=999
   INC Score(PL),1000
   'ENEMY DEAD ON PILE DRIVER?
   IF EEnergy(T)<0 THEN
    EEnergy(T)=0: PLAY_SAMPLE 10,4 'DEAD SOUND
    INC Score(PL),ESCORE(T) 'INC PLAYER SCORE
   ENDIF
  ENDIF
 ENDIF

 'ALL SCREEN LIMITS ARE VALID ONLY WHEN IN NOT ROUND INTRODUCTIONS --------------------------------

 IF OSDX=0 THEN 

  IF ((PUNCH(PL)>0 AND MV=1) AND NOT(PlType(PL)=3 AND Grap(PL)>0 AND Grap(PL)<22)) OR (PlType(PL)=3 AND AN(PL)=24) THEN X(PL)=XANT(PL):RealY(PL)=YANT(PL)
  IF XANT(PL)=X(PL) AND YANT(PL)=RealY(PL) THEN MV=0

  'MAJOR HORIZONTAL SCREEN LIMIT
  IF X(PL)< 20 THEN X(PL)= 20
  IF X(PL)>300 THEN X(PL)=300

  'CALL THE SCREEN SCROLL ONLY UNTIL REACH THE END OF THE ROUND
  IF X(PL)>165 AND ScrX<LIMRD THEN   
   ScrSide=SPD(PL): PLSCR=PL
   IF X(3-PL)<=20+SPD(3-PL) AND MAXPL=2 THEN ScrSide=0 ELSE INC X(PL),-SPD(PL)
  ENDIF

  'STAGE / ROUND LIMIT
  IF X(PL)>R_SCR THEN X(PL)=R_SCR: ScrSide=0
  IF X(PL)<L_SCR THEN X(PL)=L_SCR: ScrSide=0
 
  IF MV=0 AND AN(PL)<13 AND Grap(PL)=0 THEN AN(PL)=0

 ENDIF 'END OF OSDX=0 -----------------------------------------------------------------------------


 PILE=(AN(PL)=32 AND PlType(PL)=3)
 EPILE=GrapE(PL)

 INC AniDelay(PL)
 IF AniDelay(PL)>=AniSpd(PL) THEN
  AniDelay(PL)=0
  if MV=1 then INC AN(PL)

  'WALKING ANIMATION WHEN PLAYER ISN'T HAGGAR
  IF PlType(PL)<3 OR (PlType(PL)=3 AND Grap(PL)=0) THEN
   IF (AN(PL)>=0 AND AN(PL)<=12) THEN AniSpd(PL)=2
   IF AN(PL)>12 THEN AN(PL)=1
   IF Grap(PL)>0 THEN AN(PL)=Grap(PL)
  ELSEIF PlType(PL)=3 AND Grap(PL)>0 AND Grap(PL)<22 THEN 'IF IT'S HAGGAR AND HAVE GRAPPLED AN ENEMY
   IF (AN(PL)>=51 AND AN(PL)<=62) THEN AniSpd(PL)=2
   IF AN(PL)<51 THEN AN(PL)=51
   IF AN(PL)>62 THEN AN(PL)=51
  ENDIF

  'GET THE COORDINATES TO SET THE HIT SHAPE POSITION
  IF PHurted(PL)>0 THEN PutPlayer(X(PL),RealY(PL)+Y(PL),AN(PL),SIDE(PL),PlType(PL),PL,-1)
  PlayerAnimation(PL)
 ENDIF
 FixPlayerAnimation(PL)

 ENDIF ' END OF THE PLAYER WAIT ANIMATION FOR HITS --------------------------------------

 ' INSERT PLAYER COLLISION
 PutPlayer(X(PL),RealY(PL)+Y(PL)+PILE*15,AN(PL),SIDE(PL),PlType(PL),PL,0)

 ' CALL A SOUND EFFECT IN A SINGLE GAME LOOP
 IF PLSFX(PL)>0 THEN PLAY_SAMPLE PLSFX(PL),PL: PLSFX(PL)=0

 ' RESET COLLISION WITH ITEMS ABOVE THE PLAYER
 ITEM(PL)=0

NEXT PL '-------------------------------------------------------------------------------------


' DRAW THE COLLISION BOXES ON THE ENEMIES THROWED ---------------------------------------
 FOR IND=4 TO 12
  IF STE(IND)>0 THEN 
   IF ETR(IND)>0 THEN PutEnemy(EX(IND),RealY(IND)+EY(IND),EAN(IND),ESide(IND),EType(IND),IND,0)
  ENDIF
 NEXT IND

 IF OSDX=700 THEN PAGE WRITE 35: CLS &HFF0000

 ' CONTROL, COUNT AND GET INDEX OF ALL ENTITIES (ENEMIES AND OBJECTS) -------------------
 CNTE=0
 FOR TT=4 TO 12
  IF STE(TT)>0 THEN ControlEnemy(TT): INC CNTE
 NEXT TT
 FOR TT=13 TO EMAX
  IF STE(TT)>0 THEN ControlObject(TT)
 NEXT TT

 'INSERT REAL Y TO Z-BUFFER
 MATH ADD RealY(),0,ZBUF()

 'SORT SHAPES
 SORT ZBUF(),Index()

 'DRAW ALL SHAPES
 FOR T=1 TO EMAX
  IND=Index(T)
  IF ZBUF(IND)=999 THEN CONTINUE FOR
  SELECT CASE IND
   CASE <4: 'PLAYERS
    IF Energy(IND)>=0 THEN
     PutPlayer(X(IND)+(AN(PL)=39)*SW*2,RealY(IND)+Y(IND)+PILE*15,AN(IND),SIDE(IND),PlType(IND),IND,1)
    ENDIF
   CASE 4 TO 12: 'DRAW ACTIVE ENEMIES
    IF STE(IND)>0 THEN ? STE(IND): PutEnemy(EX(IND)+((EAN(IND)=21 OR EAN(IND)=22) AND STE(IND)<120)*SW*2,RealY(IND)+EY(IND)+(EPILE=IND AND PILE)*15,EAN(IND),ESide(IND),EType(IND),IND,1)
   CASE ELSE: 'OBJECTS
    IF STE(IND)>0 THEN PutObject(EX(IND),RealY(IND)+EY(IND),EAN(IND),ESIDE(IND),1-(EMV(IND)=2)*SB)
  END SELECT
 NEXT T  

 ' INSERT HIT ANIMATION ABOVE ALL SHAPES
 HitAnimation

 ' SHAKE SCREEN
 IF SHAKE>0 THEN INC SHAKE,-1: PAGE SCROLL 1,0,SB

 FOR T=1 TO MAXPL
  ANANT(T)=AN(T) 
 NEXT T

 PAGE WRITE 34: CLS RGB(0,0,0) ' CLEAR GENERAL  COLLISION PAGE
 IF OSDX<620 THEN PAGE WRITE 35: CLS RGB(0,0,0) ' CLEAR PLAYER 1 COLLISION PAGE
 PAGE WRITE 36: CLS RGB(0,0,0) ' CLEAR PLAYER 2 COLLISION PAGE

 ' CALL ROUND INTRO ROUTINE
 IF OSDX>0 AND OSDX<5000 THEN RoundIntro(0) 'STARTING
 IF OSDX>5000 THEN RoundIntro(1) 'ENDING

 ' OSD --------------------------------------------------------------

 ' TIMER
 ANTTIME=GTIME 
 PutObject(160,26-OSDP,99,4,1) 
 GTIME=((STIME+1)*10000-TIMER)\10000
 PrintFM(147,27-OSDP,1,FORMAT$(GTIME,"%2.0f"))
 PrintFS(145,1-OSDP,0,FORMAT$(HIGHSCORE,"%7.0f"))
 PrintS(113,1-OSDP,0,PLHIGH$)

 ' GO! GO! GO!
 INC GOGO
 IF GOGO>250 AND ScrX<LIMRD-15 THEN 
  GOGO=0
  IF ANTSCROLL=Scroll THEN InsertHit(290,130,3)
  ANTSCROLL=Scroll
 ENDIF 

 ' HIT INFO / AVATAR / LIFES / HEALTH ---------------------------------------------------
 FOR PL=1 TO MAXPL

  II=(OSDP)*(-(PL=1)+(PL=2))

  ' SHOW HIT INFO
  I=175*(PL-1)
  IF Hit(PL)>0 THEN
   IF EEnergy(Hit(PL))>0 THEN 'SHOW HEALTH IF ISN'T IN "DEADING" STATE  
    
    T=EEnMax(Hit(PL)): IF T>100 THEN T=100
    RBOX 25+I+II,36,T+2,7,2,&HFFFFFF,&HFF0000  
    T=EEnergy(Hit(PL)): IF T>100 THEN T=100
    IF T>0 THEN BOX 26+I,37,T,5,0,,&HFFFF00
    PutEnemy(30+I+II,43,99,4,EType(Hit(PL)),,1) 

   ELSE 'IF IT'S "DEADING" - SHOWS THE FLASHING HIT INFO
   
    IF STE(Hit(PL))>0 THEN  'FLASH FOR A WHILE

     IF SB THEN 
      T=EEnMax(Hit(PL)): IF T>100 THEN T=100
      Rbox 25+I+II,36,T+2,7,2,&HFFFFFF,&HFF0000  
      PutEnemy(30+I+II,43,99,4,EType(Hit(PL)),,1) 
     ELSE
      LINE 9+I,28,22+I+II,41,1,&HFF0000
      LINE 9+I,41,22+I+II,28,1,&HFF0000
     ENDIF 

    ENDIF 'END FLASH

   ENDIF 'END "DEADING" VERIFICATION

  ELSE 'IF HIT IS NEGATIVE, THEN IT'S AN OBJECT

   'SHOW OBJECT AVATAR AND NAME
   IF SHOWHIT(PL)>0 THEN
    INC SHOWHIT(PL),-1
    PutObject(16+I+II,43,Hit(PL),4,1)
    PrintS(25+(PL-1)*176+I+II,27,0,AVA$)
    'FLASHING AVATAR OF THE DESTRUCTABLE OBJECTS
    IF SB AND Hit(PL)>=-100 THEN
     LINE 9+I,28,22+I+II,41,1,&HFF0000
     LINE 9+I,41,22+I+II,28,1,&HFF0000
    ENDIF
   ENDIF

  ENDIF 'END SHOW HIT INFO

  IF Energy(PL)>=0 THEN
   'AVATAR AND HEALTH
   PutPlayer(32+175*(PL-1)+II,26,99,4,PlType(PL),PL,1) 
   Rbox 25+175*(PL-1)+II,19,112,7,2,&HFFFFFF,&HFF0000
   T=Energy(PL): IF T>110 THEN T=110
   box  26+175*(PL-1)+II,20,T,5,0,,&HFFFF00
   'LIFES
   PrintS(55+(PL-1)*178+II,10,1,"=")
   PrintS(65+(PL-1)*178+II,10,1,STR$(PLIFE(PL)))
   PrintFS(81+(PL-1)*176+II,10,0,FORMAT$(SCORE(PL),"%7.0f"))
  ENDIF

 NEXT PL ' END OF HIT INFO / AVATAR / LIFES / HEALTH -------------------------------------

  ' DEBUG INFO ONLY
 IF DEBUG=1 THEN
  PRINTS(9,50,0,"FPS:"+STR$(FPS))
  PRINTS(9,59,0,"ENE:"+STR$(CNTE))
  PRINTS(9,68,0,"SCR:"+STR$(ScrX))
  PRINTS(9,77,0,"COM:"+STR$(COMBO(1)))
  PRINTS(9,86,0,"ANI:"+STR$(AN(1)))
 ENDIF

 FPS=1000\(TIMER-TI):TI=TIMER
 DO WHILE PAUSETIMER>TIMER
 LOOP

 IF OSDX<2200 OR OSDX>5000 THEN
  IF VSYNC=1 THEN
   PAGE COPY 1 TO 0,B
  ELSE
   PAGE COPY 1 TO 0,I
  ENDIF
 ELSE IF OSDX>2200 THEN 'FADE IN WHEN STARTING A STAGE
  FadeIn
  PAGE WRITE 1
 ENDIF

 'PAUSETIMER=TIMER+26.66 '37.5 FPS - HALF 75 Hz
 PAUSETIMER=TIMER+33.3333 '30 FPS
 'PAUSETIMER=TIMER+16.6666 '60 FPS

 StageScrollEvent(ScrSide,PLSCR)

' INC TESTA
' IF TESTA>5 THEN
'  TESTA=0
'  INC TEST': IF TEST=2 THEN TEST=13
'  IF TEST>38 THEN TEST=36
' ENDIF
' TEST=75
' PutEnemy(200,230,TEST,4,11,,1)


' PAUSE(100)

LOOP

' BYE BYE!
SUB ExitGame
 PAGE WRITE 0
 FONT #1
 PLAY STOP
 END
END SUB

